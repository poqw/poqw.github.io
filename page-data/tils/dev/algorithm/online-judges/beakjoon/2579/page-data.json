{"componentChunkName":"component---src-app-pages-til-page-index-tsx","path":"/tils/dev/algorithm/online-judges/beakjoon/2579","result":{"pageContext":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"2579 \\uACC4\\uB2E8 \\uC624\\uB974\\uAE30\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.acmicpc.net/problem/2579\"\n  }), \"\\uBB38\\uC81C \\uB9C1\\uD06C\")), mdx(\"h2\", null, \"\\uBB38\\uC81C\"), mdx(\"p\", null, \"\\uACC4\\uB2E8 \\uC624\\uB974\\uAE30 \\uAC8C\\uC784\\uC740 \\uACC4\\uB2E8 \\uC544\\uB798 \\uC2DC\\uC791\\uC810\\uBD80\\uD130 \\uACC4\\uB2E8 \\uAF2D\\uB300\\uAE30\\uC5D0 \\uC704\\uCE58\\uD55C \\uB3C4\\uCC29\\uC810\\uAE4C\\uC9C0 \\uAC00\\uB294 \\uAC8C\\uC784\\uC774\\uB2E4. <\\uADF8\\uB9BC 1>\\uACFC \\uAC19\\uC774 \\uAC01\\uAC01\\uC758 \\uACC4\\uB2E8\\uC5D0\\uB294 \\uC77C\\uC815\\uD55C \\uC810\\uC218\\uAC00 \\uC4F0\\uC5EC \\uC788\\uB294\\uB370 \\uACC4\\uB2E8\\uC744 \\uBC1F\\uC73C\\uBA74 \\uADF8 \\uACC4\\uB2E8\\uC5D0 \\uC4F0\\uC5EC \\uC788\\uB294 \\uC810\\uC218\\uB97C \\uC5BB\\uAC8C \\uB41C\\uB2E4.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.acmicpc.net/upload/images/k64or2GOK1vmpEig7Ud.png\",\n    \"alt\": null\n  }))), mdx(\"p\", null, \"\\uC608\\uB97C \\uB4E4\\uC5B4 <\\uADF8\\uB9BC 2>\\uC640 \\uAC19\\uC774 \\uC2DC\\uC791\\uC810\\uC5D0\\uC11C\\uBD80\\uD130 \\uCCAB \\uBC88\\uC9F8, \\uB450 \\uBC88\\uC9F8, \\uB124 \\uBC88\\uC9F8, \\uC5EC\\uC12F \\uBC88\\uC9F8 \\uACC4\\uB2E8\\uC744 \\uBC1F\\uC544 \\uB3C4\\uCC29\\uC810\\uC5D0 \\uB3C4\\uB2EC\\uD558\\uBA74 \\uCD1D \\uC810\\uC218\\uB294 10 + 20 + 25 + 20 = 75\\uC810\\uC774 \\uB41C\\uB2E4.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.acmicpc.net/upload/images/f62omMF2kQYD5rDct.png\",\n    \"alt\": null\n  }))), mdx(\"p\", null, \"\\uACC4\\uB2E8 \\uC624\\uB974\\uB294 \\uB370\\uB294 \\uB2E4\\uC74C\\uACFC \\uAC19\\uC740 \\uADDC\\uCE59\\uC774 \\uC788\\uB2E4.\"), mdx(\"p\", null, \"\\uACC4\\uB2E8\\uC740 \\uD55C \\uBC88\\uC5D0 \\uD55C \\uACC4\\uB2E8\\uC529 \\uB610\\uB294 \\uB450 \\uACC4\\uB2E8\\uC529 \\uC624\\uB97C \\uC218 \\uC788\\uB2E4. \\uC989, \\uD55C \\uACC4\\uB2E8\\uC744 \\uBC1F\\uC73C\\uBA74\\uC11C \\uC774\\uC5B4\\uC11C \\uB2E4\\uC74C \\uACC4\\uB2E8\\uC774\\uB098, \\uB2E4\\uC74C \\uB2E4\\uC74C \\uACC4\\uB2E8\\uC73C\\uB85C \\uC624\\uB97C \\uC218 \\uC788\\uB2E4.\\n\\uC5F0\\uC18D\\uB41C \\uC138 \\uAC1C\\uC758 \\uACC4\\uB2E8\\uC744 \\uBAA8\\uB450 \\uBC1F\\uC544\\uC11C\\uB294 \\uC548 \\uB41C\\uB2E4. \\uB2E8, \\uC2DC\\uC791\\uC810\\uC740 \\uACC4\\uB2E8\\uC5D0 \\uD3EC\\uD568\\uB418\\uC9C0 \\uC54A\\uB294\\uB2E4.\\n\\uB9C8\\uC9C0\\uB9C9 \\uB3C4\\uCC29 \\uACC4\\uB2E8\\uC740 \\uBC18\\uB4DC\\uC2DC \\uBC1F\\uC544\\uC57C \\uD55C\\uB2E4.\\n\\uB530\\uB77C\\uC11C \\uCCAB \\uBC88\\uC9F8 \\uACC4\\uB2E8\\uC744 \\uBC1F\\uACE0 \\uC774\\uC5B4 \\uB450 \\uBC88\\uC9F8 \\uACC4\\uB2E8\\uC774\\uB098, \\uC138 \\uBC88\\uC9F8 \\uACC4\\uB2E8\\uC73C\\uB85C \\uC624\\uB97C \\uC218 \\uC788\\uB2E4. \\uD558\\uC9C0\\uB9CC, \\uCCAB \\uBC88\\uC9F8 \\uACC4\\uB2E8\\uC744 \\uBC1F\\uACE0 \\uC774\\uC5B4 \\uB124 \\uBC88\\uC9F8 \\uACC4\\uB2E8\\uC73C\\uB85C \\uC62C\\uB77C\\uAC00\\uAC70\\uB098, \\uCCAB \\uBC88\\uC9F8, \\uB450 \\uBC88\\uC9F8, \\uC138 \\uBC88\\uC9F8 \\uACC4\\uB2E8\\uC744 \\uC5F0\\uC18D\\uD574\\uC11C \\uBAA8\\uB450 \\uBC1F\\uC744 \\uC218\\uB294 \\uC5C6\\uB2E4.\"), mdx(\"p\", null, \"\\uAC01 \\uACC4\\uB2E8\\uC5D0 \\uC4F0\\uC5EC \\uC788\\uB294 \\uC810\\uC218\\uAC00 \\uC8FC\\uC5B4\\uC9C8 \\uB54C \\uC774 \\uAC8C\\uC784\\uC5D0\\uC11C \\uC5BB\\uC744 \\uC218 \\uC788\\uB294 \\uCD1D \\uC810\\uC218\\uC758 \\uCD5C\\uB313\\uAC12\\uC744 \\uAD6C\\uD558\\uB294 \\uD504\\uB85C\\uADF8\\uB7A8\\uC744 \\uC791\\uC131\\uD558\\uC2DC\\uC624.\"), mdx(\"h2\", null, \"\\uC785\\uB825\"), mdx(\"p\", null, \"\\uC785\\uB825\\uC758 \\uCCAB\\uC9F8 \\uC904\\uC5D0 \\uACC4\\uB2E8\\uC758 \\uAC1C\\uC218\\uAC00 \\uC8FC\\uC5B4\\uC9C4\\uB2E4.\"), mdx(\"p\", null, \"\\uB458\\uC9F8 \\uC904\\uBD80\\uD130 \\uD55C \\uC904\\uC5D0 \\uD558\\uB098\\uC529 \\uC81C\\uC77C \\uC544\\uB798\\uC5D0 \\uB193\\uC778 \\uACC4\\uB2E8\\uBD80\\uD130 \\uC21C\\uC11C\\uB300\\uB85C \\uAC01 \\uACC4\\uB2E8\\uC5D0 \\uC4F0\\uC5EC \\uC788\\uB294 \\uC810\\uC218\\uAC00 \\uC8FC\\uC5B4\\uC9C4\\uB2E4. \\uACC4\\uB2E8\\uC758 \\uAC1C\\uC218\\uB294 300\\uC774\\uD558\\uC758 \\uC790\\uC5F0\\uC218\\uC774\\uACE0, \\uACC4\\uB2E8\\uC5D0 \\uC4F0\\uC5EC \\uC788\\uB294 \\uC810\\uC218\\uB294 10,000\\uC774\\uD558\\uC758 \\uC790\\uC5F0\\uC218\\uC774\\uB2E4.\"), mdx(\"h2\", null, \"\\uCD9C\\uB825\"), mdx(\"p\", null, \"\\uCCAB\\uC9F8 \\uC904\\uC5D0 \\uACC4\\uB2E8 \\uC624\\uB974\\uAE30 \\uAC8C\\uC784\\uC5D0\\uC11C \\uC5BB\\uC744 \\uC218 \\uC788\\uB294 \\uCD1D \\uC810\\uC218\\uC758 \\uCD5C\\uB313\\uAC12\\uC744 \\uCD9C\\uB825\\uD55C\\uB2E4.\"), mdx(\"h2\", null, \"\\uD480\\uC774(Kotlin)\"), mdx(\"p\", null, \"\\uACC4\\uB2E8\\uC744 \\uC624\\uB974\\uB294 \\uC870\\uAC74\\uC774 \\uC788\\uAE30 \\uB54C\\uBB38\\uC5D0 2\\uCC28 \\uBC30\\uC5F4 dp \\uB97C \\uC0DD\\uAC01\\uD588\\uB2E4.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"f(n, 0) = n\\uBC88\\uC9F8 \\uACC4\\uB2E8\\uC744 \\uC5F0\\uC18D\\uD574\\uC11C \\uBC1F\\uC558\\uC744 \\uB54C\\uC758 \\uCD5C\\uB300\\uAC12\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"  = f(n-1, 1) // f(n-1, 0)\\uC740 \\uC5F0\\uC18D 3\\uACC4\\uB2E8 \\uBC1F\\uB294 \\uAC83\\uC774\\uBBC0\\uB85C \\uC81C\\uC678\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"f(n, 1) = n\\uBC88\\uC9F8 \\uACC4\\uB2E8\\uC744 \\uC5F0\\uC18D\\uD558\\uC9C0 \\uC54A\\uACE0 \\uBC1F\\uC558\\uC744 \\uB54C\\uC758 \\uCD5C\\uB300\\uAC12\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"  = Max(f(n-2, 0), f(n-2), 1) // \\uD55C \\uCE78 \\uB744\\uC6E0\\uC73C\\uB2C8\\uAE4C \\uC81C\\uD55C\\uC5C6\\uC774 \\uC5F0\\uC18D\\uC774\\uB4E0 \\uC5F0\\uC18D\\uC774 \\uC544\\uB2C8\\uB4E0 \\uC0C1\\uAD00\\uC5C6\\uC774 \\uB458 \\uC911 \\uCD5C\\uB300\\uAC12 \\uC120\\uD0DD.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"  \\uC774\\uAC70 \\uCC98\\uC74C\\uC5D0\\uB294 \\uC790\\uC5F0\\uC218\\uB2C8\\uAE4C \\uD56D\\uC0C1 \\uC5F0\\uC18D\\uC778 \\uAC8C \\uB354 \\uD06C\\uACA0\\uC9C0 \\uB77C\\uACE0 \\uC0DD\\uAC01\\uD588\\uB2E4\\uAC00 \\uC608\\uC81C \\uB123\\uACE0 \\uD2C0\\uB824\\uBCF4\\uACE0 \\uAE68\\uB2EC\\uC558\\uB2E4. \\uBC14\\uBCF4 \\uAC19\\uB2E4..\"))), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"kotlin\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-kotlin\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-kotlin\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"fun\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"main\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" n \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"readLine\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"!!\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"toInt\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" arr \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"IntArray\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"readLine\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"!!\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"toInt\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" dp \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"Array\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"IntArray\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"2\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token comment\"\n  }), \"// 0 \\uC5F0\\uC18D\\uC73C\\uB85C \\uD574\\uB2F9 \\uACC4\\uB2E8 \\uBC1F\\uC740 \\uACBD\\uC6B0. 1 \\uBE44\\uC5F0\\uC18D\\uC73C\\uB85C \\uD574\\uB2F9 \\uACC4\\uB2E8 \\uBC1F\\uC740 \\uACBD\\uC6B0\"), \"\\n    dp\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" arr\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \"\\n    dp\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" arr\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"if\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"n \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"==\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"print\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"arr\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"return\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n    dp\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" arr\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"+\"), \" arr\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \"\\n    dp\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" arr\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"for\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"i \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"in\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"2\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"..\"), \"arr\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"lastIndex\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n        dp\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"i\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" dp\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"i \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"-\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"+\"), \" arr\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"i\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \"\\n        dp\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"i\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"maxOf\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"dp\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"i\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"-\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"2\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"+\"), \" arr\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"i\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" dp\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"i \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"-\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"2\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"+\"), \" arr\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"i\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"print\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"maxOf\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"dp\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"n \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"-\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" dp\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), \"n \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"-\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"[\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"1\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"]\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")))));\n}\n;\nMDXContent.isMDXComponent = true;","toc":{"items":[{"url":"#2579-계단-오르기","title":"2579 계단 오르기","items":[{"url":"#문제","title":"문제"},{"url":"#입력","title":"입력"},{"url":"#출력","title":"출력"},{"url":"#풀이kotlin","title":"풀이(Kotlin)"}]}]},"name":"2579"}},"staticQueryHashes":["1694686584","3368942263"]}