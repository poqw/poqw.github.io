{"componentChunkName":"component---src-app-pages-til-page-index-tsx","path":"/tils/dev/algorithm/online-judges/beakjoon/1931","result":{"pageContext":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"11000 \\uAC15\\uC758\\uC2E4 \\uBC30\\uC815\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.acmicpc.net/problem/1931\"\n  }), \"\\uBB38\\uC81C \\uB9C1\\uD06C\")), mdx(\"h2\", null, \"\\uBB38\\uC81C\"), mdx(\"p\", null, \"\\uD55C \\uAC1C\\uC758 \\uD68C\\uC758\\uC2E4\\uC774 \\uC788\\uB294\\uB370 \\uC774\\uB97C \\uC0AC\\uC6A9\\uD558\\uACE0\\uC790 \\uD558\\uB294 N\\uAC1C\\uC758 \\uD68C\\uC758\\uC5D0 \\uB300\\uD558\\uC5EC \\uD68C\\uC758\\uC2E4 \\uC0AC\\uC6A9\\uD45C\\uB97C \\uB9CC\\uB4E4\\uB824\\uACE0 \\uD55C\\uB2E4. \\uAC01 \\uD68C\\uC758 I\\uC5D0 \\uB300\\uD574 \\uC2DC\\uC791\\uC2DC\\uAC04\\uACFC \\uB05D\\uB098\\uB294 \\uC2DC\\uAC04\\uC774 \\uC8FC\\uC5B4\\uC838 \\uC788\\uACE0, \\uAC01 \\uD68C\\uC758\\uAC00 \\uACB9\\uCE58\\uC9C0 \\uC54A\\uAC8C \\uD558\\uBA74\\uC11C \\uD68C\\uC758\\uC2E4\\uC744 \\uC0AC\\uC6A9\\uD560 \\uC218 \\uC788\\uB294 \\uD68C\\uC758\\uC758 \\uCD5C\\uB300 \\uAC1C\\uC218\\uB97C \\uCC3E\\uC544\\uBCF4\\uC790. \\uB2E8, \\uD68C\\uC758\\uB294 \\uD55C\\uBC88 \\uC2DC\\uC791\\uD558\\uBA74 \\uC911\\uAC04\\uC5D0 \\uC911\\uB2E8\\uB420 \\uC218 \\uC5C6\\uC73C\\uBA70 \\uD55C \\uD68C\\uC758\\uAC00 \\uB05D\\uB098\\uB294 \\uAC83\\uACFC \\uB3D9\\uC2DC\\uC5D0 \\uB2E4\\uC74C \\uD68C\\uC758\\uAC00 \\uC2DC\\uC791\\uB420 \\uC218 \\uC788\\uB2E4. \\uD68C\\uC758\\uC758 \\uC2DC\\uC791\\uC2DC\\uAC04\\uACFC \\uB05D\\uB098\\uB294 \\uC2DC\\uAC04\\uC774 \\uAC19\\uC744 \\uC218\\uB3C4 \\uC788\\uB2E4. \\uC774 \\uACBD\\uC6B0\\uC5D0\\uB294 \\uC2DC\\uC791\\uD558\\uC790\\uB9C8\\uC790 \\uB05D\\uB098\\uB294 \\uAC83\\uC73C\\uB85C \\uC0DD\\uAC01\\uD558\\uBA74 \\uB41C\\uB2E4.\"), mdx(\"h2\", null, \"\\uC785\\uB825\"), mdx(\"p\", null, \"\\uCCAB\\uC9F8 \\uC904\\uC5D0 \\uD68C\\uC758\\uC758 \\uC218 N(1 \\u2264 N \\u2264 100,000)\\uC774 \\uC8FC\\uC5B4\\uC9C4\\uB2E4. \\uB458\\uC9F8 \\uC904\\uBD80\\uD130 N+1 \\uC904\\uAE4C\\uC9C0 \\uAC01 \\uD68C\\uC758\\uC758 \\uC815\\uBCF4\\uAC00 \\uC8FC\\uC5B4\\uC9C0\\uB294\\uB370 \\uC774\\uAC83\\uC740 \\uACF5\\uBC31\\uC744 \\uC0AC\\uC774\\uC5D0 \\uB450\\uACE0 \\uD68C\\uC758\\uC758 \\uC2DC\\uC791\\uC2DC\\uAC04\\uACFC \\uB05D\\uB098\\uB294 \\uC2DC\\uAC04\\uC774 \\uC8FC\\uC5B4\\uC9C4\\uB2E4. \\uC2DC\\uC791 \\uC2DC\\uAC04\\uACFC \\uB05D\\uB098\\uB294 \\uC2DC\\uAC04\\uC740 231-1\\uBCF4\\uB2E4 \\uC791\\uAC70\\uB098 \\uAC19\\uC740 \\uC790\\uC5F0\\uC218 \\uB610\\uB294 0\\uC774\\uB2E4.\"), mdx(\"h2\", null, \"\\uCD9C\\uB825\"), mdx(\"p\", null, \"\\uCCAB\\uC9F8 \\uC904\\uC5D0 \\uCD5C\\uB300 \\uC0AC\\uC6A9\\uD560 \\uC218 \\uC788\\uB294 \\uD68C\\uC758\\uC758 \\uCD5C\\uB300 \\uAC1C\\uC218\\uB97C \\uCD9C\\uB825\\uD55C\\uB2E4.\"), mdx(\"h2\", null, \"\\uD480\\uC774(Kotlin)\"), mdx(\"p\", null, \"11000 \\uACFC \\uBE44\\uC2B7\\uD55C \\uBB38\\uC81C\\uC5EC\\uC11C \\uC2DC\\uC791\\uC2DC\\uAC04\\uC73C\\uB85C \\uC18C\\uD305\\uBD80\\uD130 \\uD588\\uB2E4\\uAC00 \\uC644\\uC804 \\uD5E4\\uB9F8\\uB2E4. \\uACB0\\uAD6D \\uD480\\uC774\\uB97C \\uBCF4\\uACE0\\uC11C\\uC57C \\uD480\\uC5C8\\uB2E4.\"), mdx(\"p\", null, \"greedy \\uC54C\\uACE0\\uB9AC\\uC998\\uC740 \\uCC3E\\uC544\\uBCF4\\uB2C8, \\uD0D0\\uC695\\uC801 \\uC120\\uD0DD\\uC774 \\uC774\\uD6C4\\uC758 \\uACB0\\uACFC\\uC5D0 \\uC601\\uD5A5\\uC744 \\uBBF8\\uCE58\\uC9C0 \\uC54A\\uB294 \\uACBD\\uC6B0 \\uC801\\uC6A9\\uD560 \\uC218 \\uC788\\uB294 \\uAC83\\uC774\\uB77C \\uD55C\\uB2E4. \\uC989, \\uC885\\uB8CC \\uC2DC\\uAC04\\uC774 \\uAC00\\uC7A5 \\uC9E7\\uC740\\n\\uD68C\\uC758\\uB97C \\uC120\\uD0DD\\uD558\\uB294 \\uAC83\\uC774 \\uC885\\uB8CC \\uC2DC\\uAC04\\uC774 \\uB354 \\uAE34 \\uD68C\\uC758\\uB97C \\uC120\\uD0DD\\uD574\\uC11C \\uB2E4\\uB978 \\uD68C\\uC758\\uB97C \\uC774\\uC5B4\\uBD99\\uC774\\uB294 \\uAC83\\uBCF4\\uB2E4 \\uD56D\\uC0C1 \\uB3D9\\uB4F1\\uD558\\uAC70\\uB098 \\uB354 \\uC88B\\uC740 \\uC120\\uD0DD\\uC774\\uAE30 \\uB54C\\uBB38\\uC5D0 \\uD0D0\\uC695\\uC801\\uC778 \\uC120\\uD0DD\\uC774\\n\\uC774\\uD6C4\\uC758 \\uACB0\\uACFC\\uC5D0 \\uC601\\uD5A5\\uC744 \\uBBF8\\uCE58\\uC9C0 \\uC54A\\uC74C\\uC774 \\uBCF4\\uC7A5\\uB418\\uACE0, \\uB530\\uB77C\\uC11C \\uC885\\uB8CC \\uC2DC\\uAC04\\uC73C\\uB85C \\uC18C\\uD305\\uD55C \\uB4A4 \\uCC28\\uB840\\uB300\\uB85C \\uD0D0\\uC695 \\uC120\\uD0DD\\uD574\\uAC00\\uBA74 \\uB418\\uB294 \\uAC70\\uC600\\uB2E4.\"), mdx(\"p\", null, \"\\uC2DC\\uC791 \\uC2DC\\uAC01\\uACFC \\uC885\\uB8CC \\uC2DC\\uAC01\\uC774 \\uAC19\\uC740 \\uACBD\\uC6B0 \\uB54C\\uBB38\\uC5D0 \\uC885\\uB8CC \\uC2DC\\uAC01\\uC774 \\uAC19\\uC740 \\uACBD\\uC6B0 \\uC2DC\\uC791 \\uC2DC\\uAC04\\uC73C\\uB85C\\uB3C4 \\uC18C\\uD305\\uD574\\uC8FC\\uC5C8\\uB2E4.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"kotlin\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-kotlin\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-kotlin\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"import\"), \" java\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"util\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"*\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"fun\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"main\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"with\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"Scanner\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"System\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"`\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"in\"), \"`\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" n \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"nextInt\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" array \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" mutableListOf\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"Pair\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"Int\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" Int\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"repeat\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n        array\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"add\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"nextInt\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"to\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"nextInt\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" sorted \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" array\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"sortedWith\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"compareBy\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" it\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"second \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" it\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"first \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"var\"), \" lastEnd \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"var\"), \" count \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"for\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"pair \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"in\"), \" sorted\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"if\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"lastEnd \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<=\"), \" pair\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"first\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n            count\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"++\"), \"\\n            lastEnd \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" pair\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"second\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"print\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"count\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")))));\n}\n;\nMDXContent.isMDXComponent = true;","toc":{"items":[{"url":"#11000-강의실-배정","title":"11000 강의실 배정","items":[{"url":"#문제","title":"문제"},{"url":"#입력","title":"입력"},{"url":"#출력","title":"출력"},{"url":"#풀이kotlin","title":"풀이(Kotlin)"}]}]},"name":"1931"}},"staticQueryHashes":["1694686584","3368942263"]}