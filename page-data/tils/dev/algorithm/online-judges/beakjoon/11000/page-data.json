{"componentChunkName":"component---src-app-pages-til-page-index-tsx","path":"/tils/dev/algorithm/online-judges/beakjoon/11000","result":{"pageContext":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"11000 \\uAC15\\uC758\\uC2E4 \\uBC30\\uC815\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.acmicpc.net/problem/11000\"\n  }), \"\\uBB38\\uC81C \\uB9C1\\uD06C\")), mdx(\"h2\", null, \"\\uBB38\\uC81C\"), mdx(\"p\", null, \"\\uC218\\uAC15\\uC2E0\\uCCAD\\uC758 \\uB9C8\\uC2A4\\uD130 \\uAE40\\uC885\\uD61C \\uC120\\uC0DD\\uB2D8\\uC5D0\\uAC8C \\uC0C8\\uB85C\\uC6B4 \\uACFC\\uC81C\\uAC00 \\uC8FC\\uC5B4\\uC84C\\uB2E4.\"), mdx(\"p\", null, \"\\uAE40\\uC885\\uD61C \\uC120\\uC0DD\\uB2D8\\uD55C\\uD14C\\uB294 Si\\uC5D0 \\uC2DC\\uC791\\uD574\\uC11C Ti\\uC5D0 \\uB05D\\uB098\\uB294 N\\uAC1C\\uC758 \\uC218\\uC5C5\\uC774 \\uC8FC\\uC5B4\\uC9C0\\uB294\\uB370, \\uCD5C\\uC18C\\uC758 \\uAC15\\uC758\\uC2E4\\uC744 \\uC0AC\\uC6A9\\uD574\\uC11C \\uBAA8\\uB4E0 \\uC218\\uC5C5\\uC744 \\uAC00\\uB2A5\\uD558\\uAC8C \\uD574\\uC57C \\uD55C\\uB2E4.\"), mdx(\"p\", null, \"\\uCC38\\uACE0\\uB85C, \\uC218\\uC5C5\\uC774 \\uB05D\\uB09C \\uC9C1\\uD6C4\\uC5D0 \\uB2E4\\uC74C \\uC218\\uC5C5\\uC744 \\uC2DC\\uC791\\uD560 \\uC218 \\uC788\\uB2E4. (\\uC989, Ti \\u2264 Sj \\uC77C \\uACBD\\uC6B0 i \\uC218\\uC5C5\\uACFC j \\uC218\\uC5C5\\uC740 \\uAC19\\uC774 \\uB4E4\\uC744 \\uC218 \\uC788\\uB2E4.)\"), mdx(\"p\", null, \"\\uC218\\uAC15\\uC2E0\\uCCAD \\uB300\\uCDA9\\uD55C \\uAC8C \\uCC14\\uB9AC\\uBA74, \\uC120\\uC0DD\\uB2D8\\uC744 \\uB3C4\\uC640\\uB4DC\\uB9AC\\uC790!\"), mdx(\"p\", null, \"\\uCCAB \\uBC88\\uC9F8 \\uC904\\uC5D0 N\\uC774 \\uC8FC\\uC5B4\\uC9C4\\uB2E4. (1 \\u2264 N \\u2264 200,000)\"), mdx(\"p\", null, \"\\uC774\\uD6C4 N\\uAC1C\\uC758 \\uC904\\uC5D0 Si, Ti\\uAC00 \\uC8FC\\uC5B4\\uC9C4\\uB2E4. (1 \\u2264 Si < Ti \\u2264 109)\"), mdx(\"h2\", null, \"\\uC785\\uB825\"), mdx(\"p\", null, \"\\uCCAB \\uBC88\\uC9F8 \\uC904\\uC5D0 N\\uC774 \\uC8FC\\uC5B4\\uC9C4\\uB2E4. (1 \\u2264 N \\u2264 200,000)\"), mdx(\"p\", null, \"\\uC774\\uD6C4 N\\uAC1C\\uC758 \\uC904\\uC5D0 Si, Ti\\uAC00 \\uC8FC\\uC5B4\\uC9C4\\uB2E4. (1 \\u2264 Si < Ti \\u2264 109)\"), mdx(\"h2\", null, \"\\uCD9C\\uB825\"), mdx(\"p\", null, \"\\uAC15\\uC758\\uC2E4\\uC758 \\uAC1C\\uC218\\uB97C \\uCD9C\\uB825\\uD558\\uB77C.\"), mdx(\"h2\", null, \"\\uD480\\uC774\"), mdx(\"p\", null, \"\\uBB38\\uC81C\\uAC00 \\uC798 \\uC774\\uD574\\uAC00 \\uC548\\uAC14\\uC5C8\\uB294\\uB370 \\uC608\\uC2DC\\uB97C \\uBCF4\\uACE0\\uC11C \\uC774\\uD574\\uAC00 \\uAC14\\uB2E4. \\uC608\\uB97C \\uB4E4\\uC5B4 \\uC785\\uB825\\uC774 \\uB2E4\\uC74C\\uACFC \\uAC19\\uC774 \\uC8FC\\uC5B4\\uC9C4\\uB2E4\\uACE0 \\uD55C\\uB2E4\\uBA74\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-text\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"5\\n1 4\\n2 3\\n3 6\\n4 8\\n9 11\"))), mdx(\"p\", null, \"\\uAC15\\uC758\\uC2E4\\uC740 2\\uAC1C\\uBA74 \\uCDA9\\uBD84\\uD558\\uB2E4. (1~4 4~8 9~11, 2~3 3~6)\"), mdx(\"p\", null, \"\\uCC98\\uC74C\\uC5D0 \\uC2DC\\uB3C4\\uD588\\uB358 \\uBC29\\uC2DD\\uC740 \\uD2B9\\uC815 \\uAD6C\\uAC04\\uC5D0 \\uACC2\\uCE58\\uB294 \\uAC15\\uC758\\uC758 \\uCD5C\\uB300 \\uC22B\\uC790\\uB97C \\uAD6C\\uD558\\uB294 \\uAC83\\uC774\\uC5C8\\uB2E4. \\uC774\\uAC74 \\uC774\\uC911 for\\uBB38\\uC774 \\uB3CC\\uC544\\uC57C \\uD558\\uAE30 \\uB54C\\uBB38\\uC5D0 \\uCD5C\\uB300 20\\uB9CC\\uC778 N\\uC758 O(n^2)\\uC774\\uBA74\\n\\uC5F0\\uC0B0 \\uD69F\\uC218\\uAC00 400\\uC5B5\\uD68C\\uB85C, \\uB300\\uB7B5 400\\uCD08\\uAC00 \\uAC78\\uB9B0\\uB2E4. \\uC2DC\\uAC04 \\uC81C\\uD55C\\uC774 1\\uCD08\\uB77C\\uC11C \\uC774 \\uBC29\\uC2DD\\uC740 \\uBD88\\uAC00\\uB2A5\\uD558\\uB2E4.\"), mdx(\"p\", null, \"\\uB450 \\uBC88\\uC9F8 \\uBC29\\uBC95\\uC740 inner for \\uBB38\\uC744 \\uB3CC\\uC9C0 \\uC54A\\uAE30 \\uC704\\uD574, \\uC790\\uB8CC\\uAD6C\\uC870\\uB97C \\uD558\\uB098 \\uB354 \\uC120\\uC5B8\\uD558\\uB294 \\uAC83\\uC774\\uB2E4. interation \\uD55C\\uBC88 \\uB9CC\\uC5D0 \\uCD5C\\uC801\\uC758 \\uACBD\\uC6B0\\uB97C \\uCC3E\\uC744 \\uC218 \\uC788\\uB294\\uC9C0 \\uBD10\\uC57C \\uD55C\\uB2E4.\\n\\uAE30\\uBCF8\\uC801\\uC778 \\uC544\\uC774\\uB514\\uC5B4\\uB294 iteration \\uB9C8\\uB2E4 \\uD604\\uC7AC \\uC0AC\\uC6A9\\uD558\\uACE0 \\uC788\\uB294 \\uAC15\\uC758\\uC2E4\\uC5D0 \\uB367\\uBD99\\uC77C \\uC218 \\uC788\\uC73C\\uBA74 \\uB367\\uBD99\\uC774\\uACE0, \\uADF8\\uB7F4 \\uC218 \\uC5C6\\uC73C\\uBA74 \\uAC15\\uC758\\uC2E4\\uC744 \\uD558\\uB098 \\uB354 \\uCD94\\uAC00\\uD574\\uC57C \\uD55C\\uB2E4\\uB294 \\uAC83\\uC774\\uB2E4.\\n\\uB530\\uB77C\\uC11C \\uC885\\uB8CC\\uC2DC\\uAC04\\uC774 \\uCD5C\\uC18C\\uC778 \\uAC15\\uC758\\uB97C \\uD56D\\uC0C1 \\uCC3E\\uC744 \\uC218 \\uC788\\uC5B4\\uC57C \\uD558\\uACE0, \\uD604\\uC7AC\\uAE4C\\uC9C0 \\uC0AC\\uC6A9\\uD558\\uACE0 \\uC788\\uB294 \\uAC15\\uC758\\uC2E4\\uC758 \\uC218\\uB97C \\uB3D9\\uC2DC\\uC5D0 \\uD310\\uB2E8\\uD558\\uB824\\uBA74 \\uC6B0\\uC120\\uC21C\\uC704 \\uD050\\uAC00 \\uD544\\uC694\\uD558\\uB2E4.\\n\\uC774 \\uD050\\uC5D0 \\uAC15\\uC758\\uC2E4\\uC744 \\uC774\\uC5B4 \\uBD99\\uC77C \\uC218 \\uC788\\uB2E4\\uBA74 \\uC6D0\\uB798 \\uAC15\\uC758\\uC2E4\\uC744 \\uBE7C\\uACE0 \\uC0C8\\uB85C\\uC6B4 \\uAC15\\uC758\\uC2E4\\uC744 \\uCD94\\uAC00\\uD558\\uACE0, \\uADF8\\uB7F4 \\uC218 \\uC5C6\\uC73C\\uBA74 \\uC0C8\\uB85C\\uC6B4 \\uAC15\\uC758\\uC2E4\\uC744 \\uD558\\uB098\\uC529 \\uB354 \\uCD94\\uAC00\\uD55C\\uB2E4\\uBA74\\npq\\uC758 \\uC0AC\\uC774\\uC988\\uAC00 \\uB9C8\\uC9C0\\uB9C9\\uAE4C\\uC9C0 \\uD544\\uC694\\uD55C \\uAC15\\uC758\\uC2E4 \\uC218\\uAC00 \\uB420 \\uAC83\\uC774\\uB2E4.  \"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"kotlin\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-kotlin\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-kotlin\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"import\"), \" java\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"util\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"*\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"fun\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"main\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"with\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"Scanner\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"System\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"`\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"in\"), \"`\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" n \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"nextInt\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" array \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" mutableListOf\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"Pair\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"Int\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" Int\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"repeat\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n        array\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"add\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"Pair\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"nextInt\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"nextInt\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" sorted \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" array\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"sortedWith\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"compareBy\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" it\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"first \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \",\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" it\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"second \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" pq \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" PriorityQueue\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"Int\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"compareBy \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \" it \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"for\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"pair \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"in\"), \" sorted\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"if\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"pq\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"isNotEmpty\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"&&\"), \" pair\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"first \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">=\"), \" pq\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"peek\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n            pq\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"remove\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\\n        pq\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"add\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"pair\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"second\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"print\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"pq\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"size\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")))));\n}\n;\nMDXContent.isMDXComponent = true;","toc":{"items":[{"url":"#11000-강의실-배정","title":"11000 강의실 배정","items":[{"url":"#문제","title":"문제"},{"url":"#입력","title":"입력"},{"url":"#출력","title":"출력"},{"url":"#풀이","title":"풀이"}]}]},"name":"11000"}},"staticQueryHashes":["1694686584","3368942263"]}