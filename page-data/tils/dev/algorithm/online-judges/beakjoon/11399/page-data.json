{"componentChunkName":"component---src-app-pages-til-page-index-tsx","path":"/tils/dev/algorithm/online-judges/beakjoon/11399","result":{"pageContext":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"11399 ATM\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.acmicpc.net/problem/11399\"\n  }), \"\\uBB38\\uC81C \\uB9C1\\uD06C\")), mdx(\"h2\", null, \"\\uBB38\\uC81C\"), mdx(\"p\", null, \"\\uC778\\uD558\\uC740\\uD589\\uC5D0\\uB294 ATM\\uC774 1\\uB300\\uBC16\\uC5D0 \\uC5C6\\uB2E4. \\uC9C0\\uAE08 \\uC774 ATM\\uC55E\\uC5D0 N\\uBA85\\uC758 \\uC0AC\\uB78C\\uB4E4\\uC774 \\uC904\\uC744 \\uC11C\\uC788\\uB2E4. \\uC0AC\\uB78C\\uC740 1\\uBC88\\uBD80\\uD130 N\\uBC88\\uAE4C\\uC9C0 \\uBC88\\uD638\\uAC00 \\uB9E4\\uACA8\\uC838 \\uC788\\uC73C\\uBA70, i\\uBC88 \\uC0AC\\uB78C\\uC774 \\uB3C8\\uC744 \\uC778\\uCD9C\\uD558\\uB294\\uB370 \\uAC78\\uB9AC\\uB294 \\uC2DC\\uAC04\\uC740 Pi\\uBD84\\uC774\\uB2E4.\"), mdx(\"p\", null, \"\\uC0AC\\uB78C\\uB4E4\\uC774 \\uC904\\uC744 \\uC11C\\uB294 \\uC21C\\uC11C\\uC5D0 \\uB530\\uB77C\\uC11C, \\uB3C8\\uC744 \\uC778\\uCD9C\\uD558\\uB294\\uB370 \\uD544\\uC694\\uD55C \\uC2DC\\uAC04\\uC758 \\uD569\\uC774 \\uB2EC\\uB77C\\uC9C0\\uAC8C \\uB41C\\uB2E4. \\uC608\\uB97C \\uB4E4\\uC5B4, \\uCD1D 5\\uBA85\\uC774 \\uC788\\uACE0, P1 = 3, P2 = 1, P3 = 4, P4 = 3, P5 = 2 \\uC778 \\uACBD\\uC6B0\\uB97C \\uC0DD\\uAC01\\uD574\\uBCF4\\uC790. \", \"[1, 2, 3, 4, 5]\", \" \\uC21C\\uC11C\\uB85C \\uC904\\uC744 \\uC120\\uB2E4\\uBA74, 1\\uBC88 \\uC0AC\\uB78C\\uC740 3\\uBD84\\uB9CC\\uC5D0 \\uB3C8\\uC744 \\uBF51\\uC744 \\uC218 \\uC788\\uB2E4. 2\\uBC88 \\uC0AC\\uB78C\\uC740 1\\uBC88 \\uC0AC\\uB78C\\uC774 \\uB3C8\\uC744 \\uBF51\\uC744 \\uB54C \\uAE4C\\uC9C0 \\uAE30\\uB2E4\\uB824\\uC57C \\uD558\\uAE30 \\uB54C\\uBB38\\uC5D0, 3+1 = 4\\uBD84\\uC774 \\uAC78\\uB9AC\\uAC8C \\uB41C\\uB2E4. 3\\uBC88 \\uC0AC\\uB78C\\uC740 1\\uBC88, 2\\uBC88 \\uC0AC\\uB78C\\uC774 \\uB3C8\\uC744 \\uBF51\\uC744 \\uB54C\\uAE4C\\uC9C0 \\uAE30\\uB2E4\\uB824\\uC57C \\uD558\\uAE30 \\uB54C\\uBB38\\uC5D0, \\uCD1D 3+1+4 = 8\\uBD84\\uC774 \\uD544\\uC694\\uD558\\uAC8C \\uB41C\\uB2E4. 4\\uBC88 \\uC0AC\\uB78C\\uC740 3+1+4+3 = 11\\uBD84, 5\\uBC88 \\uC0AC\\uB78C\\uC740 3+1+4+3+2 = 13\\uBD84\\uC774 \\uAC78\\uB9AC\\uAC8C \\uB41C\\uB2E4. \\uC774 \\uACBD\\uC6B0\\uC5D0 \\uAC01 \\uC0AC\\uB78C\\uC774 \\uB3C8\\uC744 \\uC778\\uCD9C\\uD558\\uB294\\uB370 \\uD544\\uC694\\uD55C \\uC2DC\\uAC04\\uC758 \\uD569\\uC740 3+4+8+11+13 = 39\\uBD84\\uC774 \\uB41C\\uB2E4.\"), mdx(\"p\", null, \"\\uC904\\uC744 \", \"[2, 5, 1, 4, 3]\", \" \\uC21C\\uC11C\\uB85C \\uC904\\uC744 \\uC11C\\uBA74, 2\\uBC88 \\uC0AC\\uB78C\\uC740 1\\uBD84\\uB9CC\\uC5D0, 5\\uBC88 \\uC0AC\\uB78C\\uC740 1+2 = 3\\uBD84, 1\\uBC88 \\uC0AC\\uB78C\\uC740 1+2+3 = 6\\uBD84, 4\\uBC88 \\uC0AC\\uB78C\\uC740 1+2+3+3 = 9\\uBD84, 3\\uBC88 \\uC0AC\\uB78C\\uC740 1+2+3+3+4 = 13\\uBD84\\uC774 \\uAC78\\uB9AC\\uAC8C \\uB41C\\uB2E4. \\uAC01 \\uC0AC\\uB78C\\uC774 \\uB3C8\\uC744 \\uC778\\uCD9C\\uD558\\uB294\\uB370 \\uD544\\uC694\\uD55C \\uC2DC\\uAC04\\uC758 \\uD569\\uC740 1+3+6+9+13 = 32\\uBD84\\uC774\\uB2E4. \\uC774 \\uBC29\\uBC95\\uBCF4\\uB2E4 \\uB354 \\uD544\\uC694\\uD55C \\uC2DC\\uAC04\\uC758 \\uD569\\uC744 \\uCD5C\\uC18C\\uB85C \\uB9CC\\uB4E4 \\uC218\\uB294 \\uC5C6\\uB2E4.\"), mdx(\"p\", null, \"\\uC904\\uC744 \\uC11C \\uC788\\uB294 \\uC0AC\\uB78C\\uC758 \\uC218 N\\uACFC \\uAC01 \\uC0AC\\uB78C\\uC774 \\uB3C8\\uC744 \\uC778\\uCD9C\\uD558\\uB294\\uB370 \\uAC78\\uB9AC\\uB294 \\uC2DC\\uAC04 Pi\\uAC00 \\uC8FC\\uC5B4\\uC84C\\uC744 \\uB54C, \\uAC01 \\uC0AC\\uB78C\\uC774 \\uB3C8\\uC744 \\uC778\\uCD9C\\uD558\\uB294\\uB370 \\uD544\\uC694\\uD55C \\uC2DC\\uAC04\\uC758 \\uD569\\uC758 \\uCD5C\\uC19F\\uAC12\\uC744 \\uAD6C\\uD558\\uB294 \\uD504\\uB85C\\uADF8\\uB7A8\\uC744 \\uC791\\uC131\\uD558\\uC2DC\\uC624.\"), mdx(\"h2\", null, \"\\uC785\\uB825\"), mdx(\"p\", null, \"\\uCCAB\\uC9F8 \\uC904\\uC5D0 \\uC0AC\\uB78C\\uC758 \\uC218 N(1 \\u2264 N \\u2264 1,000)\\uC774 \\uC8FC\\uC5B4\\uC9C4\\uB2E4. \\uB458\\uC9F8 \\uC904\\uC5D0\\uB294 \\uAC01 \\uC0AC\\uB78C\\uC774 \\uB3C8\\uC744 \\uC778\\uCD9C\\uD558\\uB294\\uB370 \\uAC78\\uB9AC\\uB294 \\uC2DC\\uAC04 Pi\\uAC00 \\uC8FC\\uC5B4\\uC9C4\\uB2E4. (1 \\u2264 Pi \\u2264 1,000)\"), mdx(\"h2\", null, \"\\uCD9C\\uB825\"), mdx(\"p\", null, \"\\uCCAB\\uC9F8 \\uC904\\uC5D0 \\uAC01 \\uC0AC\\uB78C\\uC774 \\uB3C8\\uC744 \\uC778\\uCD9C\\uD558\\uB294\\uB370 \\uD544\\uC694\\uD55C \\uC2DC\\uAC04\\uC758 \\uD569\\uC758 \\uCD5C\\uC19F\\uAC12\\uC744 \\uCD9C\\uB825\\uD55C\\uB2E4.\"), mdx(\"h2\", null, \"\\uD480\\uC774(Kotlin)\"), mdx(\"p\", null, \"\\uB108\\uBB34 \\uC26C\\uC6B4 \\uBB38\\uC81C\\uC600\\uB2E4. \\uC65C \\uD480\\uC5C8\\uC744\\uAE4C... \\uADF8\\uB0E5 \\uB118\\uC5B4\\uAC00\\uBA74 \\uC88B\\uC558\\uC744 \\uD150\\uB370. \\uC815\\uB82C\\uD558\\uACE0, \\uB9E4 index\\uB9C8\\uB2E4 sum\\uC744 \\uACC4\\uC18D ans\\uC5D0 \\uB354\\uD558\\uBA74 \\uB41C\\uB2E4.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"kotlin\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-kotlin\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-kotlin\"\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"import\"), \" java\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"util\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"*\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"fun\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"main\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"with\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"Scanner\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"System\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), \"`\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"in\"), \"`\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" n \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"nextInt\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"val\"), \" array \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" mutableListOf\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"<\"), \"Int\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \">\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"repeat\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n            array\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"add\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"nextInt\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\\n        array\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"sort\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"var\"), \" ans \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"var\"), \" sum \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token number\"\n  }), \"0\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"for\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"i \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token keyword\"\n  }), \"in\"), \" array\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"{\"), \"\\n            sum \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"+=\"), \" i\\n            ans \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token operator\"\n  }), \"+=\"), \" sum\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"print\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), \"ans\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"}\")))));\n}\n;\nMDXContent.isMDXComponent = true;","toc":{"items":[{"url":"#11399-atm","title":"11399 ATM","items":[{"url":"#문제","title":"문제"},{"url":"#입력","title":"입력"},{"url":"#출력","title":"출력"},{"url":"#풀이kotlin","title":"풀이(Kotlin)"}]}]},"name":"11399"}},"staticQueryHashes":["1694686584","3368942263"]}